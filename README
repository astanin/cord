Tumour cord growth model

	The model simulates avascular tumour growth in the presence of blood
	vessels. A special case of tumour cords is addressed. The model has
	been developed at Politecnico di Torino, Italy.  Research and
	development was funded within the 5th Marie Curie Research Training
	Network.

	The code is distributed under the terms of the GNU General Public
	License version 2 or later. See COPYING for details. iniParser and
	LSolver distributed with the code are not covered by this license.

	Running simulations is typically something like this:
	$ cord -v -t 100.0 -d 0.5 --dump-period 10.0 2>log ; tail log

	Model and method parameters are defined in cord.ini file. By default
	the file in the current directory is used. If it is not found, the
	programme looks for a file installed with the $prefix/share/cord.
	If neither file is found, the default values are used.

	Command line options override settings given in the cord.ini file.

	For more information about options see
	$ cord --help

	Results are saved in HDF5.0 files. OpenDX (.dx) and Gnuplot (.gp) 
	files may be generated for visualization.
	
	OpenDX (.dx) files may be generated from HDF files like this:
	$ cord_hdf2dx *.hdf

	Gnuplot (.gp) files may be generated from HDF files like this:
	$ cord_hdf2gp *.hdf

	To produce visualizations from Gnuplot (.gp) files using Tioga:
	$ cord_gp2pdf *.gp

	To produce visualizations from Gnuplot (.gp) files using GRI:
	$ cord_gp2eps -gri *.gp

	To produce visualizations from Gnuplot (.gp) files using gnuplot:
	$ cord_gp2eps -gnuplot *.gp

Requirements
	
	This programme depends on the following libraries:

	* libpopt (command line parsing, required)
	* Blitz++ (internal matrix representation, required)
	* BLAS (either ATLAS, or netlib's BLAS, or GotoBLAS, required)
	* GNU Scientific Library (ODE solver, numerical integration, required)
	* UMFPACK/libufsparse (generic SLE solver, optional, recommended)
	* LAPACK (tridiagonal solver, optional)
	* libhdf5 (data file format, optional)

	The programme is written in C++, and was primarily developed with
	GNU C++ compiler version 3.4. Version 4.1 seems to be OK too.
	
	Currently the source is distributed together with LSolver package
	written by C. Badura (lsolver/ subdirectory) and iniParser by N.
	Devillard (iniparser/ subdirectory).
	
	Tested in:

	* Debian GNU/Linux (etch) i386
	* Windows XP SP2 + Cygwin


Building project

	The project uses GNU autoconf/automake build system. You may build and
	install it running `./configure' script, `make' and `make install'.
	See INSTALL file for more details.

	Make sure that you have all the dependencies installed (see above).

	On my Debian system I usually run `configure' as
		
		$ ./configure --with-atlas=/usr/bin/sse2

	as SSE2-optimized ATLAS libraries are installed in /usr/bin/sse2 on
	my system. Alternatively, you may build the package against legacy
	BLAS from netlib.org. I do it in my Cygwin installation this way:
		
		$ ./configure --with-fblas

	as libfblas.a is in /usr/local/lib on my system.

Contact information:

	Sergey Astanin <sergey dot astanin at polito dot it>
	Luigi Preziosi <luigi dot preziosi at polito dot it>
	Andrea Tosin   <andrea dot tosin at polito dot it>

	http://calvino.polito.it/~mcrtn/

